{"version":3,"sources":["actions/types.js","components/images/ImageItem.js","actions/imageActions.js","components/images/ImageDropZone.js","components/images/UploadImageForm.js","components/layout/Preloader.js","components/images/Images.js","components/layout/Footer.js","reducers/imageReducer.js","reducers/index.js","store.js","App.js","index.js"],"names":["UPLOAD_IMAGE","CLEAR_IMAGE","SET_LOADING","UPLOAD_ERROR","connect","clearImage","dispatch","a","type","image","className","src","data","url","alt","value","readOnly","onClick","navigator","clipboard","writeText","M","toast","html","href","baseStyle","flex","display","flexDirection","alignItems","padding","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","color","outline","transition","activeStyle","acceptStyle","rejectStyle","ImageDropZone","setFile","onDrop","useCallback","acceptedFiles","useDropzone","accept","maxFiles","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","style","useMemo","uploadImage","fetch","method","body","res","json","payload","response","useState","file","hiddenFileInput","useRef","useEffect","upload","formData","FormData","append","event","current","click","onChange","e","target","files","ref","Preloader","state","loading","Footer","initialState","error","imageReducer","action","console","combineReducers","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","AutoInit","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a4d971e5.chunk.js","sourcesContent":["export const UPLOAD_IMAGE = 'UPLOAD_IMAGE';\nexport const CLEAR_IMAGE = 'CLEAR_IMAGE';\nexport const SET_LOADING = 'SET_LOADING';\nexport const UPLOAD_ERROR = 'UPLOAD_ERROR';","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { clearImage } from '../../actions/imageActions';\nimport M from 'materialize-css/dist/js/materialize.min.js';\n\n\nconst ImageItem = ({ image, clearImage }) => {\n\n  const copyLink = () => {\n    navigator.clipboard.writeText(image.data.url)\n    M.toast({ html: 'Copied Link!' })\n  };\n\n  const onBack = () => {\n    clearImage();\n  }\n\n\n  return (\n    <div>\n      <h5>\n        <i className=\"material-icons x-med green-text accent-3 \">check_circle</i>\n        <p>Uploaded successfully</p>\n      </h5>\n      <div className=\"card-image upload\">    \n        <img className=\"responsive-image\" src={image.data.url} alt=\"User's upload\" />\n      </div>\n      <div>\n        <input type=\"text\" value={image.data.url} readOnly />\n        <button className=\"waves-effect waves-light btn\" onClick={copyLink}>Copy Link</button>\n      </div>\n      <div className=\"padding-sm\">\n        <a className=\"cyan-text lighten-5\" href=\"/\" onClick={onBack}>\n          <span>\n            <i className=\"material-icons tiny\">arrow_back</i> Upload again\n          </span>\n        </a>\n      </div>\n    </div>\n  )\n}\n\nImageItem.propTypes = {\n  image: PropTypes.object.isRequired,\n  clearImage: PropTypes.func.isRequired,\n}\n\nexport default connect(null, { clearImage })(ImageItem);\n","import { UPLOAD_IMAGE, SET_LOADING, UPLOAD_ERROR, CLEAR_IMAGE } from './types';\n\nexport const uploadImage = (image) => async dispatch => {\n    try {\n      dispatch({\n        type: SET_LOADING\n      });\n      const res = await fetch('/image', {\n        method: 'POST',\n        body: image\n      });\n      const data = await res.json();\n      dispatch({\n        type: UPLOAD_IMAGE,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: UPLOAD_ERROR,\n        payload: error.response.data\n      })\n    };\n};\n\nexport const clearImage = () => async dispatch => {\n  dispatch({\n    type: CLEAR_IMAGE\n  });\n};\n\n// Set loading to true\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING,\n  };\n};","import React, { useCallback, useMemo } from 'react'\nimport { useDropzone } from 'react-dropzone'\n\n\nconst ImageDropZone = ({ setFile }) => {\n  const onDrop = useCallback(acceptedFiles => {\n    setFile(acceptedFiles[0]);\n  }, [setFile])\n  const {getRootProps, getInputProps, isDragActive, isDragAccept, isDragReject} = useDropzone({onDrop, accept: \"image/*\", maxFiles:1})\n\n  const style = useMemo(() => ({\n    ...baseStyle,\n    ...(isDragActive ? activeStyle : {}),\n    ...(isDragAccept ? acceptStyle : {}),\n    ...(isDragReject ? rejectStyle : {})\n  }), [\n    isDragActive,\n    isDragReject,\n    isDragAccept\n  ]);\n\n  return (\n    <div {...getRootProps({ style })}>\n      <input {...getInputProps()} />\n        <div>\n          <h6>Drop the files here ...</h6> \n          <i className=\"material-icons medium\">photo</i>\n        </div>\n    </div>\n  )\n}\n\nconst baseStyle = {\n  flex: 1,\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  padding: '4em',\n  borderWidth: 2,\n  borderRadius: 2,\n  borderColor: '#eeeeee',\n  borderStyle: 'dashed',\n  backgroundColor: '#F6F8FB',\n  color: '#bdbdbd',\n  outline: 'none',\n  transition: 'border .24s ease-in-out'\n};\n\nconst activeStyle = {\n  borderColor: '#2196f3'\n};\n\nconst acceptStyle = {\n  borderColor: '#00e676'\n};\n\nconst rejectStyle = {\n  borderColor: '#ff1744'\n};\n\nexport default ImageDropZone;\n","import React, { useState, useRef, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { uploadImage } from '../../actions/imageActions';\nimport ImageDropZone from './ImageDropZone';\nimport M from 'materialize-css/dist/js/materialize.min.js';\n\n\nconst UploadImageForm = ({ uploadImage }) => {\n  const [file, setFile] = useState(null);\n  const hiddenFileInput = useRef(null);\n\n  useEffect(() => {\n    if (file) {\n      upload()\n    }\n  });\n\n  const selectFile = (e) => {\n    setFile(e.target.files[0]);\n  };\n\n  const onClick = (e) => {\n    setFile(null);\n  };\n\n  const buttonClick = event => {\n    hiddenFileInput.current.click();\n  };\n\n  const upload = () => {\n    if (!file) {\n      M.toast({ html: 'Please choose a file first' })\n    } else {\n      const formData = new FormData();\n      formData.append(\n          \"image\",\n          file\n      );\n      uploadImage(formData)\n      setFile(null);\n    }\n  };\n\n  return (\n    <div className=\"center-align\">\n      <div>\n        <h5>\n          <p className=\"grey-text darken-4\">Upload your image</p>\n        </h5>\n        <p className=\"padding-med grey-text lighten-3\">File should be jpeg, png...</p>\n      </div>\n      <div className=\"grey darken-1\">\n        <ImageDropZone setFile={ setFile } />\n      </div>\n      <div className=\"grey-text lighten-5 upload\">Or</div>\n      <div>\n          <button className=\"waves-effect blue lighten-1 btn upload-btn z-depth-2\" onClick={buttonClick}>Upload a file</button>\n          <input type=\"file\" onChange={selectFile} onClick={onClick} accept=\"image/*\" ref={hiddenFileInput} style={{ display: 'none' }} />\n      </div>\n    </div>\n  )\n}\n\nUploadImageForm.propTypes = {\n  uploadImage: PropTypes.func.isRequired,\n}\n\n\nexport default connect(null, { uploadImage })(UploadImageForm);\n","import React, { Fragment } from 'react'\n\nconst Preloader = () => {\n  return (\n    <Fragment>\n      <h5>Uploading...</h5>\n      <div className=\"progress loader\">\n      <div className=\"indeterminate blue\"></div>\n      </div>\n    </Fragment>\n  )\n}\n\nexport default Preloader\n","import React, { Fragment } from 'react'\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ImageItem from './ImageItem';\nimport UploadImageForm from './UploadImageForm';\nimport Preloader from '../layout/Preloader';\nconst Images = ({ image:{ image, loading }}) => {\n\n  if (loading) {\n    return (\n      <div className=\"valign-wrapper\">\n        <div className=\"row center\">\n          <Preloader />\n        </div>\n      </div>\n    )\n  }\n  return (\n    <div className=\"valign-wrapper\">\n      <div className=\"row center\">\n        <div className=\"card white z-depth-3 main-card\">\n          <div className=\"card-content\">\n            {image === null ? \n              (<UploadImageForm />) : \n              (\n                <Fragment>\n                  <ImageItem image={image} />\n                </Fragment>\n              )\n            }  \n          </div>\n        </div>    \n      </div>\n    </div>\n  )\n}\n\nImages.propTypes = {\n  image: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n  image: state.image\n});\n\n\nexport default connect(mapStateToProps)(Images);\n","import React from 'react'\n\nconst Footer = () => {\n  return (\n    <footer>\n      <div className=\"footer-copyright\">\n        <div className=\"container\">\n          <div className=\"row center\">\n            Copyright © 2021 tommypnguyen. All Rights Reserved\n          </div>\n        </div>\n      </div>\n    </footer>\n  )\n};\n\nexport default Footer;\n","import { UPLOAD_IMAGE, SET_LOADING, UPLOAD_ERROR, CLEAR_IMAGE} from '../actions/types';\n\n\nconst initialState = {\n  image: null,\n  loading: false,\n  error: null\n};\n\nconst imageReducer = (state=initialState, action) => {\n  switch(action.type) {\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    case UPLOAD_IMAGE: return {\n      ...state,\n      image: action.payload,\n      loading:false\n    }\n    case CLEAR_IMAGE: \n    return {\n      ...state,\n      image: null\n    }\n    case UPLOAD_ERROR:\n      console.error(action.payload)\n      return {\n        ...state,\n        error: action.payload\n      }\n    default:\n      return state;\n    \n  }\n};\n\nexport default imageReducer;","import { combineReducers } from \"redux\";\nimport imageReducer from \"./imageReducer\";\n\nexport default combineReducers({\n  image: imageReducer\n});","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(rootReducer, initialState,composeWithDevTools(applyMiddleware(...middleware)));\n\nexport default store;","import { useEffect, Fragment } from 'react';\nimport 'materialize-css/dist/css/materialize.min.css';\nimport M from 'materialize-css/dist/js/materialize.min.js';\nimport './App.css';\n\nimport Images from './components/images/Images';\nimport Footer from './components/layout/Footer';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nconst App = () => {\n  useEffect(() => {\n    // Init Materialize JS\n    M.AutoInit();\n  });\n  return (\n    <Provider store={store}>\n      <Fragment>\n        <div className=\"container\">\n          <Images />\n          <Footer />\n        </div>\n      </Fragment>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}